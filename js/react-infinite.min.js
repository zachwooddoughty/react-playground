!function(e,t){"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?module.exports=t():e.Infinite=t()}(this,function(){var e=React.createClass({displayName:"Infinite",propTypes:{handleScroll:React.PropTypes.func,preloadBatchSize:React.PropTypes.number,preloadAdditionalHeight:React.PropTypes.number,elementHeight:React.PropTypes.number.isRequired,containerHeight:React.PropTypes.number.isRequired,infiniteLoadBeginBottomOffset:React.PropTypes.number,onInfiniteLoad:React.PropTypes.func,loadingSpinnerDelegate:React.PropTypes.renderable,isInfiniteLoading:React.PropTypes.bool,className:React.PropTypes.string},getDefaultProps:function(){return{handleScroll:function(){},loadingSpinnerDelegate:React.DOM.div(null),onInfiniteLoad:function(){},isInfiniteLoading:!1}},getInitialState:function(){var e=this.props.preloadBatchSize?this.props.preloadBatchSize:this.props.containerHeight/2,t=this.props.preloadAdditionalHeight?this.props.preloadAdditionalHeight:this.props.containerHeight,i=Math.min(this.props.children.length,Math.ceil((e+t)/this.props.elementHeight));return{numberOfChildren:this.props.children.length,scrollableHeight:void 0,displayIndexStart:0,displayIndexEnd:i,isInfiniteLoading:!1,currentScrollTop:void 0,previousScrollTop:void 0,preloadBatchSize:e,preloadAdditionalHeight:t}},componentWillReceiveProps:function(e){var t={};void 0!==e.isInfiniteLoading&&(t.isInfiniteLoading=e.isInfiniteLoading);var i=e.preloadBatchSize;t.preloadBatchSize=i?i:this.props.containerHeight/2;var o=e.preloadAdditionalHeight;t.preloadAdditionalHeight=o?o:this.props.containerHeight,this.setState(t)},componentDidUpdate:function(e){this.props.children.length!==e.children.length&&this.setStateFromScrollTop(this.getScrollTop())},componentDidMount:function(){this.setState({scrollableHeight:this.refs.scrollable.getDOMNode().clientHeight,currentScrollTop:this.getScrollTop(),previousScrollTop:this.getScrollTop()})},computeTotalScrollableHeight:function(){return this.props.elementHeight*this.props.children.length},getScrollTop:function(){return this.refs.scrollable.getDOMNode().scrollTop},isScrollingDown:function(){return this.state.previousScrollTop<this.state.currentScrollTop},setStateFromScrollTop:function(e){var t=Math.floor(e/this.state.preloadBatchSize),i=this.state.preloadBatchSize*t,o=i+this.state.preloadBatchSize,n=Math.max(0,i-this.state.preloadAdditionalHeight),l=Math.min(this.computeTotalScrollableHeight(),o+this.state.preloadAdditionalHeight),r=Math.floor(n/this.props.elementHeight),s=Math.ceil(l/this.props.elementHeight);this.setState({displayIndexStart:r,displayIndexEnd:s,currentScrollTop:e,previousScrollTop:this.state.currentScrollTop})},infiniteHandleScroll:function(e){this.props.handleScroll(this.refs.scrollable.getDOMNode()),this.handleScroll(e.target.scrollTop)},handleScroll:function(e){this.setStateFromScrollTop(e);var t=e>this.computeTotalScrollableHeight()-this.props.containerHeight-this.props.infiniteLoadBeginBottomOffset;t&&!this.state.isInfiniteLoading&&(this.setState({isInfiniteLoading:!0}),this.props.onInfiniteLoad())},buildScrollableStyle:function(){return{height:this.props.containerHeight,overflowX:"hidden",overflowY:"scroll"}},buildHeightStyle:function(e){return{width:"100%",height:Math.ceil(e)+"px"}},loadingSpinnerDisplay:function(){return{display:this.state.isInfiniteLoading?"block":"none"}},render:function(){var e=this.state.displayIndexStart*this.props.elementHeight,t=(this.props.children.length-this.state.displayIndexEnd)*this.props.elementHeight,i=this.props.children.slice(this.state.displayIndexStart,this.state.displayIndexEnd);return React.DOM.div({className:this.props.className?this.props.className:"",ref:"scrollable",style:this.buildScrollableStyle(),onScroll:this.infiniteHandleScroll},React.DOM.div({ref:"topSpacer",style:this.buildHeightStyle(e)}),i,React.DOM.div({ref:"bottomSpacer",style:this.buildHeightStyle(t)}),React.DOM.div({ref:"loadingSpinner",style:this.loadingSpinnerDisplay()},this.props.loadingSpinnerDelegate))}});return e});
